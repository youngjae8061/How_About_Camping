Index: app/src/main/java/com/example/how_about_camping/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.how_about_camping;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.AlertDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.content.res.Resources;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.location.Location;\r\nimport android.location.LocationManager;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Looper;\r\nimport android.util.Log;\r\nimport android.util.TypedValue;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.CompoundButton;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.SearchView;\r\nimport android.widget.Switch;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.bumptech.glide.Registry;\r\nimport com.bumptech.glide.annotation.GlideModule;\r\nimport com.bumptech.glide.module.AppGlideModule;\r\nimport com.firebase.ui.storage.images.FirebaseImageLoader;\r\nimport com.google.android.gms.location.FusedLocationProviderClient;\r\nimport com.google.android.gms.location.LocationCallback;\r\nimport com.google.android.gms.location.LocationListener;\r\nimport com.google.android.gms.location.LocationRequest;\r\nimport com.google.android.gms.location.LocationResult;\r\nimport com.google.android.gms.location.LocationServices;\r\nimport com.google.android.gms.location.LocationSettingsRequest;\r\nimport com.google.android.gms.maps.CameraUpdate;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.model.BitmapDescriptorFactory;\r\nimport com.google.android.gms.maps.model.Marker;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.snackbar.Snackbar;\r\nimport com.google.errorprone.annotations.Var;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport android.location.Address;\r\nimport android.location.Geocoder;\r\nimport android.widget.ViewFlipper;\r\n\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.MapFragment;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.GeoPoint;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageMetadata;\r\nimport com.google.firebase.storage.StorageReference;\r\n\r\nimport org.w3c.dom.Text;\r\n\r\nimport java.io.BufferedInputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.Serializable;\r\nimport java.io.StringReader;\r\nimport java.net.URL;\r\nimport java.net.URLConnection;\r\nimport java.text.BreakIterator;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.HashMap;\r\nimport java.util.HashSet;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\nimport java.util.Map;\r\nimport java.util.UUID;\r\n\r\nimport noman.googleplaces.NRPlaces;\r\nimport noman.googleplaces.Place;\r\nimport noman.googleplaces.PlaceType;\r\nimport noman.googleplaces.PlacesException;\r\nimport noman.googleplaces.PlacesListener;\r\n\r\npublic class MainActivity extends AppCompatActivity implements OnMapReadyCallback, GoogleMap.OnMarkerClickListener,\r\n        ActivityCompat.OnRequestPermissionsResultCallback, Serializable {\r\n\r\n    FirebaseAuth fAuth;\r\n    FirebaseFirestore fStore;\r\n    private FirebaseFirestore db; //파이어베이스 인스턴스\r\n\r\n    Switch switch_sch;\r\n    boolean sch = false;\r\n\r\n    static final String apimapKey = \"AIzaSyBOCI7VOW4uISKkrUjcV5oRsZU658xFOHI\";\r\n\r\n    private GoogleMap mMap;\r\n    private Marker currentMarker = null;\r\n\r\n    List<Marker> previous_marker = null;\r\n    //테스트중==============================================================================================\r\n    List<String> items = new ArrayList<>();\r\n    SearchView search_view;\r\n    TextView text_search;\r\n\r\n    private static final String TAG = \"drugstoremap\";\r\n    private static final int GPS_ENABLE_REQUEST_CODE = 2001;\r\n    private static final int UPDATE_INTERVAL_MS = 1000;\r\n    private static final int FASTEST_UPDATE_INTERVAL_MS = 500;\r\n\r\n    // 사용 권한 요청을 구별하기 위해 사용함\r\n    private static final int PERMISSIONS_REQUEST_CODE = 100;\r\n    boolean needRequest = false;\r\n\r\n    String[] REQUIRED_PERMISSIONS = {Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION};  // 외부 저장소\r\n\r\n    LatLng currentPosition;\r\n\r\n    private FusedLocationProviderClient mFusedLocationClient;//기기의 현재 위치 가져오기\r\n    private LocationRequest locationRequest;\r\n    private Location location;\r\n\r\n    private View mLayout;\r\n\r\n    ImageView img_test;\r\n    ImageButton imgbtn_logout;\r\n    private Geocoder geocoder;\r\n    private Button btn_review, btn_sch;\r\n    private TextView edt_sch;\r\n    // 마지막으로 뒤로가기 버튼을 눌렀던 시간 저장\r\n    private long backKeyPressedTime = 0;\r\n    // 첫 번째 뒤로가기 버튼을 누를때 표시\r\n    private Toast toast;\r\n\r\n    private GeoPoint gp;\r\n    private MarkerOptions markerOptions;\r\n    private double get_latitude, get_longitude;\r\n    SupportMapFragment mapFragment;\r\n\r\n    FirebaseStorage storage = FirebaseStorage.getInstance();\r\n\r\n    Button button3, button4;\r\n    View dialogView;\r\n    ImageView imgReview;\r\n    TextView txtSpotName, txtReview;\r\n\r\n    String title, snippet;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        findViewById(R.id.btn_sch).setOnClickListener(onClickListener);\r\n        findViewById(R.id.btn_review).setOnClickListener(onClickListener);//리뷰버튼\r\n        findViewById(R.id.imgbtn_logout).setOnClickListener(onClickListener);\r\n        findViewById(R.id.button3).setOnClickListener(onClickListener);\r\n        ; // 약국 지도 버튼\r\n        findViewById(R.id.button4).setOnClickListener(onClickListener);\r\n        ; // 날씨 버튼\r\n        // 다이얼로그 버튼들\r\n\r\n        img_test = (ImageView) findViewById(R.id.img_test);\r\n\r\n        switch_sch = (Switch) findViewById(R.id.switch_sch);\r\n\r\n        // Obtain the SupportMapFragment and get notified when the map is ready to be used.\r\n        mapFragment = (SupportMapFragment) getSupportFragmentManager()\r\n                .findFragmentById(R.id.map);\r\n        mapFragment.getMapAsync(this);\r\n\r\n        //파이어베이스 파이어스토어\r\n        fAuth = FirebaseAuth.getInstance();\r\n        fStore = FirebaseFirestore.getInstance();\r\n        db = FirebaseFirestore.getInstance();\r\n\r\n        locationRequest = new LocationRequest()\r\n                .setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY)\r\n                .setInterval(UPDATE_INTERVAL_MS)\r\n                .setFastestInterval(FASTEST_UPDATE_INTERVAL_MS);\r\n\r\n        LocationSettingsRequest.Builder builder =\r\n                new LocationSettingsRequest.Builder();\r\n\r\n        builder.addLocationRequest(locationRequest);\r\n\r\n        mFusedLocationClient = LocationServices.getFusedLocationProviderClient(this);\r\n\r\n        previous_marker = new ArrayList<Marker>();\r\n        mLayout = findViewById(R.id.layout_maps);\r\n\r\n\r\n        /*//=======================테스트중\r\n        SearchView search_view = (SearchView)findViewById(R.id.search_view);\r\n        final TextView text_search = (TextView)findViewById(R.id.text_search);\r\n        text_search.setText(getResult());\r\n\r\n        search_view.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n            @Override\r\n            public boolean onQueryTextSubmit(String query) {\r\n                //검색(돋보기 버튼을 눌렀을때)\r\n                return false;\r\n            }\r\n\r\n            @Override\r\n            public boolean onQueryTextChange(String newText) {\r\n                //검색창에 글자를 칠때마다 뜨게할때\r\n                text_search.setText(search(newText));\r\n                return true;\r\n            }\r\n        });\r\n        //=======================테스트중 */\r\n\r\n        CheckState();\r\n        showData();//후기등록한거 제목 전체 띄우기\r\n\r\n        switch_sch.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(CompoundButton compoundButton, boolean b) {\r\n                CheckState();\r\n            }\r\n        });\r\n\r\n        //로그인상태가 아니라면 로그인 화면으로 전환\r\n        if (FirebaseAuth.getInstance().getCurrentUser() == null) {\r\n            startActivity(new Intent(getApplicationContext(), LoginActivity.class));\r\n        }\r\n    }//onCreate()\r\n\r\n    //입력받은 문자를 필터링해주는 기능\r\n    private String search(String query) {\r\n        StringBuilder sb = new StringBuilder();\r\n        for (int i = 0; i < items.size(); i++) {\r\n            String item = items.get(i);\r\n            sb.append(item);\r\n            if (i != items.size() - 1) {\r\n                sb.append(\"\\n\");\r\n            }\r\n        }\r\n        return sb.toString();\r\n    }\r\n\r\n    //결과물 출력 메서드\r\n    private String getResult() {\r\n        StringBuilder sb = new StringBuilder();\r\n        for (int i = 0; i < items.size(); i++) {\r\n            //items에서 하나씩 꺼네서 sb에 하나씩 넣어준다.\r\n            String item = items.get(i);\r\n            sb.append(item);\r\n            if (i != items.size() - 1) {\r\n                sb.append(\"\\n\");\r\n            }\r\n        }\r\n        return sb.toString();\r\n    }\r\n\r\n    private void showData() {\r\n        db.collection(\"review\")\r\n                .get()\r\n                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                        if (task.isSuccessful()) {\r\n                            for (QueryDocumentSnapshot document : task.getResult()) {\r\n                                String a = document.getString(\"spot_name\");\r\n                                items.add(a);\r\n                            }\r\n                        } else {\r\n                            //실패했을경우\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    View.OnClickListener onClickListener = new View.OnClickListener() {\r\n        @Override\r\n        public void onClick(View view) {\r\n            switch (view.getId()) {\r\n                case R.id.btn_sch:\r\n                    if (sch == true) {\r\n                        schReview();\r\n                    } else {\r\n                        schSpot();\r\n                    }\r\n                    break;\r\n                case R.id.btn_review:\r\n                    Intent intent_rv = new Intent(MainActivity.this, ReviewActivity.class);\r\n                    intent_rv.putExtra(\"latitude\", get_latitude);\r\n                    intent_rv.putExtra(\"longitude\", get_longitude);\r\n                    startActivity(intent_rv);\r\n                    break;\r\n                case R.id.imgbtn_logout:\r\n                    FirebaseAuth.getInstance().signOut();\r\n                    startLoginActivity();\r\n                    break;\r\n                case R.id.button3:\r\n                    startMapsActivity();\r\n                    break;\r\n                case R.id.button4:\r\n                    startWeatherActivity();\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    private void CheckState() {\r\n        edt_sch = (TextView) findViewById(R.id.edt_sch);\r\n        if (switch_sch.isChecked()) {\r\n            edt_sch.setHint(\"내용으로 검색하세요\");\r\n            sch = true;\r\n        } else {\r\n            edt_sch.setHint(\"장소명을 검색하세요\");\r\n            sch = false;\r\n        }\r\n\r\n    }\r\n\r\n    //장소명으로 검색\r\n    private void schSpot() {\r\n        mMap.clear();\r\n        final String sch = edt_sch.getText().toString();\r\n        if (sch.length() > 0) {\r\n            FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();\r\n            //Toast.makeText(MainActivity.this,String.valueOf(db.collection(\"review\")),Toast.LENGTH_SHORT).show();\r\n            db.collection(\"review\")\r\n                    .whereEqualTo(\"spot_name\", sch)\r\n                    .get()\r\n                    .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                            if (task.isSuccessful()) {\r\n                                for (QueryDocumentSnapshot document : task.getResult()) {\r\n                                    gp = (GeoPoint) document.get(\"map\");\r\n                                    mMap.setOnMarkerClickListener(MainActivity.this);\r\n                                    Log.d(TAG, String.valueOf(document.get(\"spot_name\"))); //!!!!!!!!!!!!!!!!!!\r\n\r\n                                    String filename = String.valueOf(document.get(\"id\")) + \".png\";\r\n                                    final StorageReference storageRef = storage.getReferenceFromUrl(\"gs://mobilesw-a40fa.appspot.com\").child(\"images/\"+filename);\r\n\r\n                                    storageRef.getDownloadUrl().addOnCompleteListener(new OnCompleteListener<Uri>() {\r\n                                        @Override\r\n                                        public void onComplete(@NonNull Task<Uri> task) {\r\n                                            if (task.isSuccessful()) {\r\n                                                Toast.makeText(MainActivity.this, task.getResult().getLastPathSegment(), Toast.LENGTH_SHORT); //안뜸\r\n                                                // Glide 이용하여 이미지뷰에 로딩\r\n                                                /*Glide.with(MainActivity.this)\r\n                                                        .load(task.getResult())\r\n                                                        .override(1024, 980)\r\n                                                        .into(img_test);*/\r\n                                            } else {\r\n                                                // URL을 가져오지 못하면 토스트 메세지\r\n                                                Toast.makeText(MainActivity.this, task.getException().getMessage(), Toast.LENGTH_SHORT).show();\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                    LatLng latLng = new LatLng(gp.getLatitude(), gp.getLongitude());\r\n                                    mMap.moveCamera(CameraUpdateFactory.newLatLng(latLng));    // 화면이 바라볼 곳은 latlng이다.\r\n                                    mMap.moveCamera(CameraUpdateFactory.zoomTo(12));        // 화면은 15만큼 당겨라?  단계는 1~21까지 있음 숫자가 클수록 자세함\r\n                                    BitmapDrawable bitmapdraw = (BitmapDrawable)getResources().getDrawable(R.drawable.tent);\r\n                                    Bitmap b = bitmapdraw.getBitmap();\r\n                                    Bitmap smallMarker = Bitmap.createScaledBitmap(b, 100, 70, false);\r\n\r\n                                    markerOptions = new MarkerOptions()\r\n                                            .position(latLng)\r\n                                            .title(String.valueOf(document.get(\"review\")))\r\n                                            .snippet(String.valueOf(document.get(\"spot_name\")))\r\n                                            .icon(BitmapDescriptorFactory.fromBitmap(smallMarker));\r\n                                    mMap.addMarker(markerOptions);\r\n                                }\r\n                            } else {\r\n                                startToast(\"다른 단어로 검색해주세요.\");\r\n                            }\r\n                        }\r\n                    });\r\n        } else startToast(\"검색할 장소를 입력해주세요.\");\r\n    }\r\n\r\n    //후기내용으로 검색\r\n    private void schReview() {\r\n        mMap.clear();\r\n        final String sch = edt_sch.getText().toString();\r\n        if (sch.length() > 0) {\r\n            FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();\r\n            db.collection(\"review\")\r\n                    .whereEqualTo(\"review\", sch)\r\n                    .get()\r\n                    .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                            if (task.isSuccessful()) {\r\n                                for (QueryDocumentSnapshot document : task.getResult()) {\r\n                                    gp = (GeoPoint) document.get(\"map\");\r\n\r\n                                    Log.d(TAG, String.valueOf(document.get(\"review\"))); //!!!!!!!!!!!!!!!!!!\r\n\r\n                                    String filename = String.valueOf(document.get(\"id\")) + \".png\";\r\n                                    final StorageReference storageRef = storage.getReferenceFromUrl(\"gs://mobilesw-a40fa.appspot.com\").child(\"images/\"+filename);\r\n\r\n                                    storageRef.getDownloadUrl().addOnCompleteListener(new OnCompleteListener<Uri>() {\r\n                                        @Override\r\n                                        public void onComplete(@NonNull Task<Uri> task) {\r\n                                            if (task.isSuccessful()) {\r\n                                                // Glide 이용하여 이미지뷰에 로딩\r\n                                                Glide.with(MainActivity.this)\r\n                                                        .load(task.getResult())\r\n                                                        .override(1024, 980)\r\n                                                        .into(img_test);\r\n                                            } else {\r\n                                                // URL을 가져오지 못하면 토스트 메세지\r\n                                                Toast.makeText(MainActivity.this, task.getException().getMessage(), Toast.LENGTH_SHORT).show();\r\n                                            }\r\n                                        }\r\n                                    });\r\n\r\n                                    LatLng latLng = new LatLng(gp.getLatitude(), gp.getLongitude());\r\n                                    mMap.moveCamera(CameraUpdateFactory.newLatLng(latLng));    // 화면이 바라볼 곳은 latlng이다.\r\n                                    mMap.moveCamera(CameraUpdateFactory.zoomTo(12));        // 화면은 15만큼 당겨라?  단계는 1~21까지 있음 숫자가 클수록 자세함\r\n                                    BitmapDrawable bitmapdraw = (BitmapDrawable)getResources().getDrawable(R.drawable.tent);\r\n                                    Bitmap b = bitmapdraw.getBitmap();\r\n                                    Bitmap smallMarker = Bitmap.createScaledBitmap(b, 100, 70, false);\r\n                                    markerOptions = new MarkerOptions()\r\n                                            .position(latLng)\r\n                                            .title(String.valueOf(document.get(\"spot_name\")))\r\n                                            .snippet(String.valueOf(document.get(\"review\")))\r\n                                            .icon(BitmapDescriptorFactory.fromBitmap(smallMarker));\r\n                                    mMap.addMarker(markerOptions);\r\n                                }\r\n                            } else {\r\n                                startToast(\"다른 단어로 검색해주세요.\");\r\n                            }\r\n                        }\r\n                    });\r\n        } else startToast(\"검색할 내용을 입력해주세요.\");\r\n    }\r\n\r\n    @Override\r\n    public void onMapReady(GoogleMap googleMap) {\r\n        Log.d(TAG, \"onMapReady :\");\r\n\r\n        mMap = googleMap;\r\n        mMap.setOnMarkerClickListener(MainActivity.this);\r\n\r\n        googleMap.setIndoorEnabled(true);   //실내에서작동\r\n        googleMap.setBuildingsEnabled(true);//건물표시\r\n        googleMap.getUiSettings().setZoomControlsEnabled(true);//UI에서 Zoom 컨트롤하겠다.\r\n\r\n        setDefaultLocation();\r\n\r\n        // 권한 처리\r\n        int hasFineLocationPermission = ContextCompat.checkSelfPermission(this,\r\n                Manifest.permission.ACCESS_FINE_LOCATION);\r\n        int hasCoarseLocationPermission = ContextCompat.checkSelfPermission(this,\r\n                Manifest.permission.ACCESS_COARSE_LOCATION);\r\n        // 권한 여부 확인\r\n\r\n        // 권한있음\r\n        if (hasFineLocationPermission == PackageManager.PERMISSION_GRANTED &&\r\n                hasCoarseLocationPermission == PackageManager.PERMISSION_GRANTED) {\r\n\r\n            startLocationUpdates();\r\n        } else {\r\n            // 권한없음\r\n            // 권한 거부 시\r\n            if (ActivityCompat.shouldShowRequestPermissionRationale(this, REQUIRED_PERMISSIONS[0])) {\r\n                Snackbar.make(mLayout, \"이 앱을 실행하려면 위치 접근 권한이 필요합니다.\",\r\n                        Snackbar.LENGTH_INDEFINITE).setAction(\"확인\", new View.OnClickListener() {\r\n\r\n                    @Override\r\n                    public void onClick(View view) {\r\n\r\n                        ActivityCompat.requestPermissions(MainActivity.this, REQUIRED_PERMISSIONS,\r\n                                PERMISSIONS_REQUEST_CODE);\r\n                    }\r\n                }).show();\r\n            } else {\r\n                // 권한 요청\r\n                ActivityCompat.requestPermissions(this, REQUIRED_PERMISSIONS,\r\n                        PERMISSIONS_REQUEST_CODE);\r\n            }\r\n        }\r\n\r\n        mMap.getUiSettings().setMyLocationButtonEnabled(true);\r\n\r\n        mMap.setOnMapClickListener(new GoogleMap.OnMapClickListener() {\r\n            @Override\r\n            public void onMapClick(LatLng latLng) {\r\n\r\n                Log.d(TAG, \"onMapClick :\");\r\n            }\r\n        });\r\n    }\r\n    @GlideModule\r\n    public class MyAppGlideModule extends AppGlideModule {\r\n\r\n        @Override\r\n        public void registerComponents(@NonNull Context context, @NonNull Glide glide, @NonNull Registry registry) {\r\n            registry.append(StorageReference.class, InputStream.class, new FirebaseImageLoader.Factory());\r\n        }\r\n    }\r\n    @Override\r\n    public boolean onMarkerClick(Marker marker) {\r\n        dialogView = (View) View.inflate(MainActivity.this, R.layout.dialog, null);\r\n        AlertDialog.Builder dlg = new AlertDialog.Builder(MainActivity.this);\r\n       // startToast(\"들어가긴하는거냐../?\");\r\n        //startToast(marker.getTitle());\r\n        //startToast(marker.getSnippet());\r\n\r\n        imgReview = (ImageView) dialogView.findViewById(R.id.imgReview);\r\n        txtSpotName = (TextView) dialogView.findViewById(R.id.txtSpotName);\r\n        txtReview = (TextView) dialogView.findViewById(R.id.txtReview);\r\n\r\n        title = marker.getTitle();\r\n        snippet = marker.getSnippet();\r\n\r\n        db.collection(\"review\")\r\n                .whereEqualTo(\"spot_name\", title)\r\n                .whereEqualTo(\"review\", snippet)\r\n                .get()\r\n                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                        if (task.isSuccessful()) {\r\n                            for (QueryDocumentSnapshot document : task.getResult()) {\r\n                                startToast(String.valueOf(document.get(\"spot_name\")));\r\n\r\n                                String filename = String.valueOf(document.get(\"id\")) + \".png\";\r\n                                final StorageReference storageR = storage.getReferenceFromUrl(\"gs://mobilesw-a40fa.appspot.com\").child(\"images/\"+filename);\r\n                                //StorageReference pathReference = storageR.child(\"images/\"+filename);\r\n                                String imageUrl = String.valueOf(storageR);\r\n\r\n                                Glide.with(imgReview.getContext())\r\n                                        .using(new FirebaseImageLoader())\r\n                                        .load(imageUrl)\r\n                                        .into(imgReview);\r\n\r\n                                storageR.getDownloadUrl().addOnCompleteListener(new OnCompleteListener<Uri>() {\r\n                                    @Override\r\n                                    public void onComplete(@NonNull Task<Uri> task) {\r\n                                        if (task.isSuccessful()) {\r\n                                            // Glide 이용하여 이미지뷰에 로딩\r\n                                        } else {\r\n                                            // URL을 가져오지 못하면 토스트 메세지\r\n                                            Toast.makeText(MainActivity.this, task.getException().getMessage(), Toast.LENGTH_SHORT).show();\r\n                                        }\r\n                                    }\r\n                                });\r\n\r\n                                startToast(\"이건\"+String.valueOf(task.getResult()));\r\n                                startToast(String.valueOf(storageR));\r\n\r\n                                BitmapDrawable bitmapdraw = (BitmapDrawable)getResources().getDrawable(R.drawable.tent);\r\n                                Bitmap b = bitmapdraw.getBitmap();\r\n                                Bitmap smallMarker = Bitmap.createScaledBitmap(b, 100, 70, false);\r\n\r\n                            }\r\n                        } else {\r\n                            startToast(\"사진을 못가져왔어요 ㅠ\");\r\n                        }\r\n                    }\r\n                });\r\n\r\n\r\n        txtSpotName.setText(title);\r\n        txtReview.setText(snippet);\r\n        //imgReview.setImageResource();\r\n        dlg.setView(dialogView);\r\n        dlg.setPositiveButton(\"확인\", null);\r\n        dlg.show();\r\n        return true;\r\n    }\r\n\r\n    //위치 갱신\r\n    private LocationCallback locationCallback = new LocationCallback() {\r\n        @Override\r\n        public void onLocationResult(LocationResult locationResult) {\r\n            super.onLocationResult(locationResult);\r\n\r\n            get_latitude = locationResult.getLastLocation().getLatitude();\r\n            get_longitude = locationResult.getLastLocation().getLongitude();\r\n            mFusedLocationClient.removeLocationUpdates(locationCallback);\r\n            //gp = new GeoPoint(get_latitude, get_longitude);\r\n            //Toast.makeText(MainActivity.this, String.valueOf(gp), Toast.LENGTH_SHORT).show();\r\n\r\n            //currentPosition = new LatLng(get_latitude, get_longitude);\r\n\r\n            LatLng latLng = new LatLng(get_latitude, get_longitude);\r\n            mMap.moveCamera(CameraUpdateFactory.newLatLng(latLng));    // 화면이 바라볼 곳은 latlng이다.\r\n            mMap.moveCamera(CameraUpdateFactory.zoomTo(15));\r\n        }\r\n    };\r\n\r\n    private void startLocationUpdates() {\r\n\r\n        if (!checkLocationServicesStatus()) {\r\n\r\n            Log.d(TAG, \"startLocationUpdates : call showDialogForLocationServiceSetting\");\r\n            showDialogForLocationServiceSetting();\r\n        } else {\r\n\r\n            int hasFineLocationPermission = ContextCompat.checkSelfPermission(this,\r\n                    Manifest.permission.ACCESS_FINE_LOCATION);\r\n            int hasCoarseLocationPermission = ContextCompat.checkSelfPermission(this,\r\n                    Manifest.permission.ACCESS_COARSE_LOCATION);\r\n\r\n            if (hasFineLocationPermission != PackageManager.PERMISSION_GRANTED ||\r\n                    hasCoarseLocationPermission != PackageManager.PERMISSION_GRANTED) {\r\n\r\n                Log.d(TAG, \"startLocationUpdates : 권한 없음\");\r\n                return;\r\n            }\r\n\r\n            Log.d(TAG, \"startLocationUpdates : call mFusedLocationClient.requestLocationUpdates\");\r\n\r\n            mFusedLocationClient.requestLocationUpdates(locationRequest, locationCallback, Looper.myLooper());\r\n\r\n            if (checkPermission())\r\n                mMap.setMyLocationEnabled(true);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n\r\n        Log.d(TAG, \"onStart\");\r\n\r\n        if (checkPermission()) {\r\n            Log.d(TAG, \"onStart : call mFusedLocationClient.requestLocationUpdates\");\r\n            mFusedLocationClient.requestLocationUpdates(locationRequest, locationCallback, null);\r\n\r\n            if (mMap != null)\r\n                mMap.setMyLocationEnabled(true);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n        if (mFusedLocationClient != null) {\r\n\r\n            Log.d(TAG, \"onStop : call stopLocationUpdates\");\r\n            mFusedLocationClient.removeLocationUpdates(locationCallback);\r\n        }\r\n    }\r\n\r\n    public String getCurrentAddress(LatLng latlng) {\r\n        //GPS를 주소로 변환\r\n        Geocoder geocoder = new Geocoder(this, Locale.getDefault());\r\n\r\n        List<Address> addresses;\r\n\r\n        try {\r\n            addresses = geocoder.getFromLocation(\r\n                    latlng.latitude,\r\n                    latlng.longitude,\r\n                    1);\r\n        } catch (IOException ioException) {\r\n            //네트워크 문제\r\n            Toast.makeText(this, \"지오코더 서비스 사용불가\", Toast.LENGTH_LONG).show();\r\n            return \"지오코더 서비스 사용불가\";\r\n        } catch (IllegalArgumentException illegalArgumentException) {\r\n            Toast.makeText(this, \"잘못된 GPS 좌표\", Toast.LENGTH_LONG).show();\r\n            return \"잘못된 GPS 좌표\";\r\n        }\r\n\r\n        if (addresses == null || addresses.size() == 0) {\r\n            Toast.makeText(this, \"주소 미발견\", Toast.LENGTH_LONG).show();\r\n            return \"주소 미발견\";\r\n        } else {\r\n            Address address = addresses.get(0);\r\n            return address.getAddressLine(0).toString();\r\n        }\r\n    }\r\n\r\n    public boolean checkLocationServicesStatus() {\r\n        LocationManager locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);\r\n\r\n        return locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)\r\n                || locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER);\r\n    }\r\n\r\n    public void setDefaultLocation() {\r\n\r\n        //기본 위치 서울 37.5665, 126.9780\r\n        LatLng DEFAULT_LOCATION = new LatLng(37.5665, 126.9780);\r\n        String markerTitle = \"위치정보 가져올 수 없음\";\r\n        String markerSnippet = \"위치 권한과 GPS 활성 여부를 확인해주세요\";\r\n\r\n\r\n        if (currentMarker != null) currentMarker.remove();\r\n\r\n        MarkerOptions markerOptions = new MarkerOptions();\r\n        markerOptions.position(DEFAULT_LOCATION);\r\n        markerOptions.title(markerTitle);\r\n        markerOptions.snippet(markerSnippet);\r\n        markerOptions.draggable(true);\r\n        markerOptions.icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_RED));\r\n        currentMarker = mMap.addMarker(markerOptions);\r\n\r\n        CameraUpdate cameraUpdate = CameraUpdateFactory.newLatLngZoom(DEFAULT_LOCATION, 15);\r\n        mMap.moveCamera(cameraUpdate);\r\n\r\n    }\r\n\r\n    //권한 처리\r\n    private boolean checkPermission() {\r\n\r\n        int hasFineLocationPermission = ContextCompat.checkSelfPermission(this,\r\n                Manifest.permission.ACCESS_FINE_LOCATION);\r\n        int hasCoarseLocationPermission = ContextCompat.checkSelfPermission(this,\r\n                Manifest.permission.ACCESS_COARSE_LOCATION);\r\n\r\n\r\n        if (hasFineLocationPermission == PackageManager.PERMISSION_GRANTED &&\r\n                hasCoarseLocationPermission == PackageManager.PERMISSION_GRANTED) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    //권한 요청 결과 받아옴\r\n    @Override\r\n    public void onRequestPermissionsResult(int permsRequestCode,\r\n                                           @NonNull String[] permissions,\r\n                                           @NonNull int[] grandResults) {\r\n\r\n        if (permsRequestCode == PERMISSIONS_REQUEST_CODE && grandResults.length == REQUIRED_PERMISSIONS.length) {\r\n            boolean check_result = true;\r\n\r\n\r\n            // 권한 허용 체크\r\n\r\n            for (int result : grandResults) {\r\n                if (result != PackageManager.PERMISSION_GRANTED) {\r\n                    check_result = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (check_result) {\r\n\r\n                // 권한 허용\r\n                startLocationUpdates();\r\n            } else {\r\n                // 권한 거부\r\n                if (ActivityCompat.shouldShowRequestPermissionRationale(this, REQUIRED_PERMISSIONS[0])\r\n                        || ActivityCompat.shouldShowRequestPermissionRationale(this, REQUIRED_PERMISSIONS[1])) {\r\n\r\n                    // 거부한 경우\r\n                    Snackbar.make(mLayout, \"권한이 거부되었습니다. 앱을 다시 실행하여 허용해주세요. \",\r\n                            Snackbar.LENGTH_INDEFINITE).setAction(\"확인\", new View.OnClickListener() {\r\n\r\n                        @Override\r\n                        public void onClick(View view) {\r\n                            finish();\r\n                        }\r\n                    }).show();\r\n\r\n                } else {\r\n                    // \"다시 묻지 않음\"을 사용자가 체크하고 거부한 경우\r\n                    Snackbar.make(mLayout, \"권한이 거부되었습니다. 설정에서 권한을 허용해야 합니다. \",\r\n                            Snackbar.LENGTH_INDEFINITE).setAction(\"확인\", new View.OnClickListener() {\r\n\r\n                        @Override\r\n                        public void onClick(View view) {\r\n                            finish();\r\n                        }\r\n                    }).show();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //여기부터는 GPS 활성화를 위한 메소드들\r\n    private void showDialogForLocationServiceSetting() {\r\n\r\n        androidx.appcompat.app.AlertDialog.Builder builder = new androidx.appcompat.app.AlertDialog.Builder(MainActivity.this);\r\n        builder.setTitle(\"위치 서비스 비활성화\");\r\n        builder.setMessage(\"앱을 사용하기 위해서는 위치 서비스가 필요합니다.\\n\"\r\n                + \"위치 설정을 허용해주세요.\");\r\n        builder.setCancelable(true);\r\n        builder.setPositiveButton(\"설정\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int id) {\r\n                Intent callGPSSettingIntent\r\n                        = new Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS);\r\n                startActivityForResult(callGPSSettingIntent, GPS_ENABLE_REQUEST_CODE);\r\n            }\r\n        });\r\n        builder.setNegativeButton(\"취소\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int id) {\r\n                dialog.cancel();\r\n            }\r\n        });\r\n        builder.create().show();\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        switch (requestCode) {\r\n\r\n            case GPS_ENABLE_REQUEST_CODE:\r\n\r\n                //사용자가 GPS 활성 시켰는지 검사\r\n                if (checkLocationServicesStatus()) {\r\n                    if (checkLocationServicesStatus()) {\r\n\r\n                        Log.d(TAG, \"onActivityResult : GPS 활성화\");\r\n\r\n\r\n                        needRequest = true;\r\n\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        // 기존 뒤로가기 버튼의 기능을 막기위해 주석처리 또는 삭제\r\n        // super.onBackPressed();\r\n\r\n        // 마지막으로 뒤로가기 버튼을 눌렀던 시간에 2초를 더해 현재시간과 비교 후\r\n        // 마지막으로 뒤로가기 버튼을 눌렀던 시간이 2초가 지났으면 Toast Show\r\n        // 2000 milliseconds = 2 seconds\r\n        if (System.currentTimeMillis() > backKeyPressedTime + 2000) {\r\n            backKeyPressedTime = System.currentTimeMillis();\r\n            toast = Toast.makeText(this, \"\\'뒤로\\' 버튼을 한번 더 누르시면 종료됩니다.\", Toast.LENGTH_SHORT);\r\n            toast.show();\r\n            return;\r\n        }\r\n        // 마지막으로 뒤로가기 버튼을 눌렀던 시간에 2초를 더해 현재시간과 비교 후\r\n        // 마지막으로 뒤로가기 버튼을 눌렀던 시간이 2초가 지나지 않았으면 종료\r\n        // 현재 표시된 Toast 취소\r\n        if (System.currentTimeMillis() <= backKeyPressedTime + 2000) {\r\n            toast.cancel();\r\n            moveTaskToBack(true);                        // 태스크를 백그라운드로 이동\r\n            //finishAndRemoveTask();\t\t\t\t\t\t// 액티비티 종료 + 태스크 리스트에서 지우기\r\n            android.os.Process.killProcess(android.os.Process.myPid());    // 앱 프로세스 종료\r\n        }\r\n    }//onBackPressed()\r\n\r\n    public void startMapsActivity() { //약국지도화면으로 이동\r\n        Intent intent = new Intent(this, MapsActivity.class);\r\n        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n        startActivity(intent);\r\n    }\r\n\r\n    public void startWeatherActivity() { //날씨화면으로 이동\r\n        Intent intent = new Intent(this, WeatherActivity.class);\r\n        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n        startActivity(intent);\r\n    }\r\n\r\n    private void startLoginActivity() {\r\n        Intent intent = new Intent(this, LoginActivity.class);\r\n        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n        startActivity(intent);\r\n    }\r\n\r\n    private void startToast(String msg) {\r\n        Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/how_about_camping/MainActivity.java	(revision 710ccd424a766f8e5285ca3cdb6451cf1d8978d5)
+++ app/src/main/java/com/example/how_about_camping/MainActivity.java	(date 1606653276557)
@@ -553,10 +553,10 @@
                                 String filename = String.valueOf(document.get("id")) + ".png";
                                 final StorageReference storageR = storage.getReferenceFromUrl("gs://mobilesw-a40fa.appspot.com").child("images/"+filename);
                                 //StorageReference pathReference = storageR.child("images/"+filename);
-                                String imageUrl = String.valueOf(storageR);
+                                String imageUrl = String.valueOf(storage);
 
                                 Glide.with(imgReview.getContext())
-                                        .using(new FirebaseImageLoader())
+                                        //.using(new FirebaseImageLoader())
                                         .load(imageUrl)
                                         .into(imgReview);
 
Index: app/src/main/java/com/example/how_about_camping/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.how_about_camping;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInAccount;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInClient;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\r\nimport com.google.android.gms.common.SignInButton;\r\nimport com.google.android.gms.common.api.ApiException;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthCredential;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.GoogleAuthProvider;\r\n\r\npublic class LoginActivity extends AppCompatActivity {\r\n\r\n    private static final int RC_SIGN_IN = 10;\r\n    SignInButton login_google;\r\n    private GoogleSignInClient mGoogleSignInClient;\r\n    private FirebaseAuth mAuth;\r\n\r\n    EditText edt_id, edt_pw;\r\n    TextView txt_join;\r\n    Button btn_login;\r\n\r\n    // 마지막으로 뒤로가기 버튼을 눌렀던 시간 저장\r\n    private long backKeyPressedTime = 0;\r\n    // 첫 번째 뒤로가기 버튼을 누를때 표시\r\n    private Toast toast;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_login);\r\n\r\n        login_google = (SignInButton)findViewById(R.id.login_google);\r\n        mAuth = FirebaseAuth.getInstance();\r\n        edt_id = (EditText)findViewById(R.id.edt_id);\r\n        edt_pw = (EditText)findViewById(R.id.edt_pw);\r\n        btn_login = (Button)findViewById(R.id.btn_login);\r\n        txt_join = (TextView)findViewById(R.id.txt_join);\r\n\r\n        //로그인상태라면 메인 화면으로 전환\r\n        if(FirebaseAuth.getInstance().getCurrentUser() != null){\r\n            startActivity(new Intent(getApplicationContext(),MainActivity.class));\r\n        }\r\n\r\n        // Configure Google Sign In 구글 로그인 인증하기\r\n        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n                .requestIdToken(getString(R.string.default_web_client_id))\r\n                .requestEmail()\r\n                .build();\r\n\r\n        mGoogleSignInClient = GoogleSignIn.getClient(this, gso);\r\n\r\n        // 이 사람이 구글 사용자니??\r\n        login_google.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent signInIntent = mGoogleSignInClient.getSignInIntent();\r\n                startActivityForResult(signInIntent, RC_SIGN_IN);\r\n            }\r\n        });//login_google.setOnClickListener()\r\n\r\n        // 로그인 버튼 클릭\r\n        btn_login.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                mAuth.signInWithEmailAndPassword(edt_id.getText().toString(), edt_pw.getText().toString()).addOnCompleteListener(new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            final ProgressDialog mDialog = new ProgressDialog(LoginActivity.this);\r\n                            mDialog.setMessage(\"로그인 중...\");\r\n                            mDialog.show();\r\n                            //Toast.makeText(LoginActivity.this, edt_id.getText().toString()+\" 님 로그인 성공\", Toast.LENGTH_SHORT).show();\r\n                            //startActivity(new Intent(getApplicationContext(),MainActivity.class));\r\n\r\n                            startMainActivity();\r\n\r\n                        } else\r\n                            Toast.makeText(LoginActivity.this, \"로그인 실패\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n\r\n        // 회원가입 버튼 클릭시 회원가입 화면으로 넘어감\r\n        txt_join.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(getApplicationContext(), JoinActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n    }//onCreate()\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        // Result returned from launching the Intent from GoogleSignInApi.getSignInIntent(...);\r\n        if (requestCode == RC_SIGN_IN) {\r\n            Task<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);\r\n            try {\r\n                // 이 사람은 구글 사용자가 맞아요\r\n                // Google Sign In was successful, authenticate with Firebase\r\n                GoogleSignInAccount account = task.getResult(ApiException.class);\r\n                firebaseAuthWithGoogle(account.getIdToken());\r\n            } catch (ApiException e) {\r\n                // Google Sign In failed, update UI appropriately\r\n                // ...\r\n            }\r\n        }\r\n    }//onActivityResult()\r\n\r\n    private void firebaseAuthWithGoogle(final String idToken) {\r\n        //해당 사용자의 구글 정보를 파이어베이스에 넘겨준다.\r\n        final AuthCredential credential = GoogleAuthProvider.getCredential(idToken, null);\r\n        mAuth.signInWithCredential(credential)\r\n                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            startMainActivity();\r\n                            finish();\r\n                        } else {\r\n                            Toast.makeText(getApplicationContext(),\"로그인에 실패했습니다.\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n\r\n                        // ...\r\n                    }\r\n                });\r\n    }//firebaseAuthWithGoogle()\r\n\r\n    private void startMainActivity(){\r\n        Intent intent = new Intent(this, MainActivity.class);\r\n        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n        startActivity(intent);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        // 기존 뒤로가기 버튼의 기능을 막기위해 주석처리 또는 삭제\r\n        // super.onBackPressed();\r\n\r\n        // 마지막으로 뒤로가기 버튼을 눌렀던 시간에 2초를 더해 현재시간과 비교 후\r\n        // 마지막으로 뒤로가기 버튼을 눌렀던 시간이 2초가 지났으면 Toast Show\r\n        // 2000 milliseconds = 2 seconds\r\n        if (System.currentTimeMillis() > backKeyPressedTime + 2000) {\r\n            backKeyPressedTime = System.currentTimeMillis();\r\n            toast = Toast.makeText(this, \"\\'뒤로\\' 버튼을 한번 더 누르시면 종료됩니다.\", Toast.LENGTH_SHORT);\r\n            toast.show();\r\n            return;\r\n        }\r\n        // 마지막으로 뒤로가기 버튼을 눌렀던 시간에 2초를 더해 현재시간과 비교 후\r\n        // 마지막으로 뒤로가기 버튼을 눌렀던 시간이 2초가 지나지 않았으면 종료\r\n        // 현재 표시된 Toast 취소\r\n        if (System.currentTimeMillis() <= backKeyPressedTime + 2000) {\r\n            toast.cancel();\r\n            moveTaskToBack(true);\t\t\t\t\t\t// 태스크를 백그라운드로 이동\r\n            //finishAndRemoveTask();\t\t\t\t\t\t// 액티비티 종료 + 태스크 리스트에서 지우기\r\n            android.os.Process.killProcess(android.os.Process.myPid());\t// 앱 프로세스 종료\r\n        }\r\n    }//onBackPressed()\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/how_about_camping/LoginActivity.java	(revision 710ccd424a766f8e5285ca3cdb6451cf1d8978d5)
+++ app/src/main/java/com/example/how_about_camping/LoginActivity.java	(date 1606656595677)
@@ -74,6 +74,7 @@
             public void onClick(View view) {
                 Intent signInIntent = mGoogleSignInClient.getSignInIntent();
                 startActivityForResult(signInIntent, RC_SIGN_IN);
+
             }
         });//login_google.setOnClickListener()
 
